// Code generated by MockGen. DO NOT EDIT.
// Source: ../lagoon/groupnameprojectids.go
//
// Generated by this command:
//
//	mockgen -source=../lagoon/groupnameprojectids.go -package=mock -destination=lagoon_groupnameprojectids.go -write_generate_directive
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

//go:generate mockgen -source=../lagoon/groupnameprojectids.go -package=mock -destination=lagoon_groupnameprojectids.go -write_generate_directive

// MockDBService is a mock of DBService interface.
type MockDBService struct {
	ctrl     *gomock.Controller
	recorder *MockDBServiceMockRecorder
}

// MockDBServiceMockRecorder is the mock recorder for MockDBService.
type MockDBServiceMockRecorder struct {
	mock *MockDBService
}

// NewMockDBService creates a new mock instance.
func NewMockDBService(ctrl *gomock.Controller) *MockDBService {
	mock := &MockDBService{ctrl: ctrl}
	mock.recorder = &MockDBServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDBService) EXPECT() *MockDBServiceMockRecorder {
	return m.recorder
}

// GroupIDProjectIDsMap mocks base method.
func (m *MockDBService) GroupIDProjectIDsMap(arg0 context.Context) (map[string][]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GroupIDProjectIDsMap", arg0)
	ret0, _ := ret[0].(map[string][]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GroupIDProjectIDsMap indicates an expected call of GroupIDProjectIDsMap.
func (mr *MockDBServiceMockRecorder) GroupIDProjectIDsMap(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GroupIDProjectIDsMap", reflect.TypeOf((*MockDBService)(nil).GroupIDProjectIDsMap), arg0)
}

// MockKeycloakService is a mock of KeycloakService interface.
type MockKeycloakService struct {
	ctrl     *gomock.Controller
	recorder *MockKeycloakServiceMockRecorder
}

// MockKeycloakServiceMockRecorder is the mock recorder for MockKeycloakService.
type MockKeycloakServiceMockRecorder struct {
	mock *MockKeycloakService
}

// NewMockKeycloakService creates a new mock instance.
func NewMockKeycloakService(ctrl *gomock.Controller) *MockKeycloakService {
	mock := &MockKeycloakService{ctrl: ctrl}
	mock.recorder = &MockKeycloakServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeycloakService) EXPECT() *MockKeycloakServiceMockRecorder {
	return m.recorder
}

// GroupNameGroupIDMap mocks base method.
func (m *MockKeycloakService) GroupNameGroupIDMap(arg0 context.Context) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GroupNameGroupIDMap", arg0)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GroupNameGroupIDMap indicates an expected call of GroupNameGroupIDMap.
func (mr *MockKeycloakServiceMockRecorder) GroupNameGroupIDMap(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GroupNameGroupIDMap", reflect.TypeOf((*MockKeycloakService)(nil).GroupNameGroupIDMap), arg0)
}
