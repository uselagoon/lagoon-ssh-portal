name: Release
on:
  push:
    branches:
    - main
jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.bump-tag.outputs.new }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Configure Git
      run: |
        git config --global user.name "$GITHUB_ACTOR"
        git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: "^1.17"
    - name: Install ccv
      run: >
        curl -sSL https://github.com/smlx/ccv/releases/download/v0.3.2/ccv_0.3.2_linux_amd64.tar.gz
        | sudo tar -xz -C /usr/local/bin ccv
    - name: Bump tag if necessary
      id: bump-tag
      run: |
        if [ -z $(git tag -l $(ccv)) ]; then
          git tag $(ccv)
          git push --tags
          echo "::set-output name=new::true"
        fi
  release:
    needs: tag
    if: needs.tag.outputs.new-tag == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: "^1.17"
    - name: Set up environment
      run: echo "GOVERSION=$(go version)" >> $GITHUB_ENV
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker metadata
      id: service_api_meta
      uses: docker/metadata-action@v3
      with:
        images: uselagoon/lagoon-ssh-portal/service-api
    - name: Build and push service-api container image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ghcr.io/${{ steps.service_api_meta.outputs.tags }}
        labels: ${{ steps.service_api_meta.outputs.labels }}
        file: deploy/service-api/Dockerfile
        context: dist/lagoon-ssh-portal_linux_amd64
